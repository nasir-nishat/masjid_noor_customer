import 'package:masjid_noor_customer/presentation/pages/all_export.dart';import 'package:masjid_noor_customer/presentation/pages/product/search_product_controller.dart';class SearchPage extends GetView<SearchProductController> {  const SearchPage({super.key});  @override  Widget build(BuildContext context) {    final TextEditingController searchController = TextEditingController();    return Scaffold(      appBar: AppBar(        title: TextField(          autofocus: true,          controller: searchController,          decoration: InputDecoration(            hintText: 'Search products',            suffixIcon: IconButton(              icon: const Icon(Icons.search),              onPressed: () => controller.searchProducts(searchController.text),            ),          ),          onSubmitted: (value) => controller.searchProducts(value),        ),      ),      body: Obx(() => Stack(            children: [              Padding(                padding: EdgeInsets.symmetric(horizontal: 8.w, vertical: 8.h),                child: controller.isSearchLoading.value                    ? _buildLoadingShimmer()                    : GridView.builder(                        gridDelegate:                            const SliverGridDelegateWithFixedCrossAxisCount(                          crossAxisCount: 2,                          mainAxisSpacing: 8,                          crossAxisSpacing: 8,                          childAspectRatio: 0.95,                        ),                        itemCount: controller.searchedProducts.length,                        itemBuilder: (context, index) {                          return ProductItem(                            product: controller.searchedProducts[index],                            parentRoute: Routes.search,                          );                        },                      ),              ),              if (controller.hasMoreResults.value &&                  !controller.isSearchLoading.value)                Positioned(                  left: 0,                  right: 0,                  bottom: 16.h,                  child: Center(                    child: SizedBox(                      width: 150.w,                      child: TextButton(                        style: TextButton.styleFrom(                          backgroundColor:                              context.theme.primaryColor.withOpacity(0.8),                        ),                        onPressed: controller.isSearchLoading.value                            ? null                            : () => controller                                .loadMoreSearchProducts(searchController.text),                        child: controller.isSearchLoading.value                            ? const CircularProgressIndicator()                            : const Text('Show More',                                style: TextStyle(color: Colors.white)),                      ),                    ),                  ),                ),            ],          )),    );  }  Widget _buildLoadingShimmer() {    return Shimmer.fromColors(      baseColor: Colors.grey[300]!,      highlightColor: Colors.grey[100]!,      child: GridView.builder(        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(          crossAxisCount: 2,          mainAxisSpacing: 8,          crossAxisSpacing: 8,        ),        itemCount: 10, // Placeholder count        itemBuilder: (context, index) {          return _buildShimmerProductItem();        },      ),    );  }  Widget _buildShimmerProductItem() {    return Card(      margin: EdgeInsets.all(8.r),      child: Container(        decoration: BoxDecoration(          color: Colors.white,          borderRadius: BorderRadius.circular(8.r),        ),        width: 170.w,        height: 40.h,      ),    );  }}