import 'package:go_router/go_router.dart';import 'package:masjid_noor_customer/presentation/pages/all_export.dart';class ProductItem extends StatefulWidget {  final ProductMd product;  final String parentRoute;  const ProductItem({    super.key,    required this.product,    required this.parentRoute,  });  @override  _ProductItemState createState() => _ProductItemState();}class _ProductItemState extends State<ProductItem>    with TickerProviderStateMixin {  bool isTapped = false;  @override  Widget build(BuildContext context) {    return SizedBox(        width: 170.w,        child: Align(          alignment: Alignment.center,          child: InkWell(            highlightColor: Colors.white,            splashColor: Colors.white,            hoverColor: Colors.white,            onHighlightChanged: (value) {              setState(() {                isTapped = value;              });            },            onTap: () {              context.go(                  // '${Routes.productDetails}?prodId=${products[index].id}');                  '${Routes.productDetails}/${widget.product.id}',                  extra: {                    'id': widget.product.id.toString(),                    'parentRoute': widget.parentRoute                  });              // widget.productOnTap?.call();            },            child: AnimatedContainer(                duration: const Duration(milliseconds: 300),                curve: Curves.fastLinearToSlowEaseIn,                child: Column(                  crossAxisAlignment: CrossAxisAlignment.start,                  children: [                    ClipRRect(                      borderRadius: BorderRadius.circular(10.r),                      child: Image.network(                        widget.product.images?.first ??                            'https://picsum.photos/100/100',                        height: isTapped ? 130.h : 135.h,                        width: isTapped ? 170.w : 172.w,                        fit: BoxFit.fitWidth,                      ),                    ),                    Padding(                      padding: EdgeInsets.only(left: 5.w, top: 5.h),                      child: SpacedColumn(                        crossAxisAlignment: CrossAxisAlignment.start,                        children: [                          SizedBox(                            width: 248.w,                            child: Text(widget.product.name,                                maxLines: 2,                                overflow: TextOverflow.ellipsis,                                style: context.textTheme.labelMedium?.copyWith(                                  color: const Color(0xFFCEE1FF),                                )),                          ),                          Text(                            "â‚© ${widget.product.sellPrice.toString()}",                            style: context.textTheme.labelMedium?.copyWith(                              color: const Color(0xFF701515),                            ),                          ),                          // Text("${widget.productWeight.toString()} kg",                          //     style: context.textTheme.headlineSmall?.copyWith(                          //       color: const Color(0xFF297533),                          //     )),                        ],                      ),                    )                  ],                )),          ),        ));  }}